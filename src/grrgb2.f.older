C*GRIMG2 -- image of a 2D data array (pixel-primitive devices)
C
C The routine works by changing the color table of the device every
C few pixels.  It's moderately slow but at least it works in the 
C existing device framework.  At the end, the original color table is
C restored. 
C
C+
      SUBROUTINE GRRGB2 (A, IDIM, JDIM, I1, I2, J1, J2,
     1                   A1, A2, PA, MININD, MAXIND)
      INTEGER IDIM, JDIM, I1, I2, J1, J2, MININD, MAXIND
      REAL    A(IDIM,JDIM,3)
      REAL    A1, A2
      REAL    PA(6)
C
C (This routine is called by GRRGB0.)
C--
C 17-Jan-2003 New routine [CED] based on GRIMG2
C 14-Aug-2003 Modified algorithm for image-reduction: works by averaging, now.
C-----------------------------------------------------------------------
      INCLUDE 'grpckg1.inc'
      INTEGER  I,IX,IX1,IX2,IY,IY1,IY2,J, NPIX, LCHR
      REAL     DEN
      REAL     XXAA,XXBB,YYAA,YYBB,XYAA,XYBB,YXAA,YXBB,XYAAIY,YXAAIY
      REAL     BUFFER(260)
      REAL     OCT(3,256)
      CHARACTER*1 CHR
      INTRINSIC NINT, LOG
      INTEGER  OCI, CI
      REAL     CBUF(4)

C-----------------------------------------------------------------------
C
C Color range
C
      ARANGE = A2 - A1
      if(ARANGE.LE.0) THEN
         CALL GRWARN('Invalid RGB value range')
         RETURN
      END IF

      if(MININD.le.16) MININD = 16
      if(MAXIND-MININD.ge.240) MAXIND=MININD+239

C 
C Old plotting color
C     
      CALL PGQCI(OCI)

C
C Store old color map
C
      DO 50 I=MININD,MAXIND
         CBUF(1) = I
         CALL GREXEC(GRGTYP,29,CBUF,J,CHR,LCHR)
         OCT(1,I) = CBUF(2)
         OCT(2,I) = CBUF(3)
         OCT(3,I) = CBUF(4)
 50   CONTINUE

C
C Location of current window in device coordinates.
C
      IX1 = NINT(GRXMIN(GRCIDE))+1
      IX2 = NINT(GRXMAX(GRCIDE))-1
      IY1 = NINT(GRYMIN(GRCIDE))+1
      IY2 = NINT(GRYMAX(GRCIDE))-1


C
C Transformation from array coordinates to device coordinates.
C
      DEN = PA(2)*PA(6)-PA(3)*PA(5)
      XXAA = (-PA(6))*PA(1)/DEN
      XXBB = PA(6)/DEN
      XYAA = (-PA(3))*PA(4)/DEN
      XYBB = PA(3)/DEN
      YYAA = (-PA(2))*PA(4)/DEN
      YYBB = PA(2)/DEN
      YXAA = (-PA(5))*PA(1)/DEN
      YXBB = PA(5)/DEN

C
C Start a new page if necessary.
C
      IF (.NOT.GRPLTD(GRCIDE)) CALL GRBPIC
C
C Run through every device pixel (IX, IY) in the current window and
C determine which array pixel (I,J) it falls in. 
C

      DO 120 IY=IY1,IY2
          XYAAIY = XXAA-XYAA-XYBB*IY
          YXAAIY = YYAA+YYBB*IY-YXAA
          NPIX = 0
          CI = MININD
          BUFFER(2) = IY
          DO 110 IX=IX1,IX2
            I = NINT(XYAAIY+XXBB*IX)
            IF (I.LT.I1.OR.I.GT.I2) GOTO 110
            J = NINT(YXAAIY-YXBB*IX)
            IF (J.LT.J1.OR.J.GT.J2) GOTO 110
C
C           -- Set color table entry
C
            CBUF(1) = CI
            CBUF(2) = ( A(I,J,1) - A1 ) / ARANGE
            CBUF(3) = ( A(I,J,2) - A1 ) / ARANGE
            CBUF(4) = ( A(I,J,3) - A1 ) / ARANGE
            CALL GREXEC(GRGTYP,21,CBUF,4,CHR,LCHR)

            NPIX = NPIX+1
            IF (NPIX.EQ.1) BUFFER(1) = IX
            BUFFER(NPIX+2) = CI
            
            CI = CI + 1

            IF (CI.gt.MAXIND) THEN
               IF(NPIX.GT.0) THEN
c                  ix0 = buffer(1)
c                  do 105 ii=ix0,ix
c                    buffer(1) = ii
c                    call pgsci(
c                    call GREXEC(GRGTYP,13,buffer,2,chr,lchr)
c 105                continue
                    
               IF(NPIX.GT.0) CALL
     :                   GREXEC(GRGTYP, 26, BUFFER, NPIX+2, CHR, LCHR)
               end if

               CI = MININD
               NPIX = 0
            END IF

  110     CONTINUE
          IF (NPIX.GT.0) CALL 
     :                   GREXEC(GRGTYP, 26, BUFFER, NPIX+2, CHR, LCHR)
  120 CONTINUE
C-----------------------------------------------------------------------

C
C Restore old color map
C
      DO 150 I=MININD,MAXIND
         CBUF(1) = I
         CBUF(2) = OCT(1,I)
         CBUF(3) = OCT(2,I)
         CBUF(4) = OCT(3,I)
         CALL GREXEC(GRGTYP,21,CBUF,4,CHR,LCHR)
 150  CONTINUE

C
C Restore old olotting color
C
      CALL PGSCI(OCI)
      
      END
